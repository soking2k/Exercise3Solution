// <auto-generated />
using System;
using Exercise3.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercise3.Data.Migrations
{
    [DbContext(typeof(Exercise3DbContext))]
    partial class Exercise3DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exercise3.Data.Entities.Agreements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgreementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgreementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysUntilExpiration")
                        .HasColumnType("int");

                    b.Property<string>("DistributorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuoteNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agreements", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgreementName = "Name 2",
                            AgreementType = "Name 3",
                            CreatedDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8433),
                            DaysUntilExpiration = 1,
                            DistributorName = "Name 4",
                            EffectiveDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8425),
                            ExpirationDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8432),
                            QuoteNumber = "Name 1",
                            Status = "Invalid"
                        },
                        new
                        {
                            Id = 2,
                            AgreementName = "Name 3",
                            AgreementType = "Name 4",
                            CreatedDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8437),
                            DaysUntilExpiration = 2,
                            DistributorName = "Name 5",
                            EffectiveDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8435),
                            ExpirationDate = new DateTime(2022, 5, 25, 10, 26, 13, 730, DateTimeKind.Local).AddTicks(8436),
                            QuoteNumber = "Name 2",
                            Status = "Published"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
